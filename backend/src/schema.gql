# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateCustomerInput {
  address: String
  company: String
  email: String
  name: String!
  notes: String
  phone: String
  status: CustomerStatus
}

input CreateInteractionInput {
  customerId: String!
  notes: String!
  type: InteractionType!
}

input CreateJobInput {
  customerId: String!
  description: String
  dueDate: DateTime
  priority: Priority
  startDate: DateTime
  status: JobStatus
  title: String!
}

type Customer {
  address: String
  assignedTo: User!
  company: String
  createdAt: DateTime!
  email: String
  id: ID!
  name: String!
  notes: String
  phone: String
  status: CustomerStatus!
  updatedAt: DateTime!
  userId: String!
}

enum CustomerStatus {
  ACTIVE
  INACTIVE
  LEAD
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Interaction {
  createdAt: DateTime!
  createdBy: User!
  customer: Customer!
  customerId: String!
  id: ID!
  notes: String!
  type: InteractionType!
  updatedAt: DateTime!
  userId: String!
}

enum InteractionType {
  CALL
  EMAIL
  MEETING
  NOTE
  OTHER
}

type Job {
  completedAt: DateTime
  createdAt: DateTime!
  customer: Customer!
  customerId: String!
  description: String
  dueDate: DateTime
  id: ID!
  priority: Priority!
  startDate: DateTime
  status: JobStatus!
  title: String!
  updatedAt: DateTime!
}

enum JobStatus {
  CANCELLED
  COMPLETED
  IN_PROGRESS
  PENDING
}

input LoginInput {
  email: String!
  password: String!
}

type LoginResponse {
  access_token: String!
  user: User!
}

type Mutation {
  createCustomer(input: CreateCustomerInput!): Customer!
  createInteraction(input: CreateInteractionInput!): Interaction!
  createJob(input: CreateJobInput!): Job!
  login(input: LoginInput!): LoginResponse!
  removeCustomer(id: ID!): Customer!
  removeInteraction(id: ID!): Interaction!
  removeJob(id: ID!): Job!
  signup(input: SignupInput!): LoginResponse!
  updateCustomer(input: UpdateCustomerInput!): Customer!
  updateInteraction(input: UpdateInteractionInput!): Interaction!
  updateJob(input: UpdateJobInput!): Job!
  updateUser(email: String, id: ID!, name: String): User!
}

enum Priority {
  HIGH
  LOW
  MEDIUM
  URGENT
}

type Query {
  customer(id: ID!): Customer!
  customerInteractions(customerId: ID!): [Interaction!]!
  customerJobs(customerId: ID!): [Job!]!
  customers: [Customer!]!
  interaction(id: ID!): Interaction!
  interactions: [Interaction!]!
  job(id: ID!): Job!
  jobs: [Job!]!
  me: User!
  user(id: ID!): User
  users: [User!]!
}

"""User role"""
enum Role {
  ADMIN
  MANAGER
  USER
}

input SignupInput {
  email: String!
  name: String!
  password: String!
}

input UpdateCustomerInput {
  address: String
  company: String
  email: String
  id: ID!
  name: String
  notes: String
  phone: String
  status: CustomerStatus
}

input UpdateInteractionInput {
  customerId: String
  id: ID!
  notes: String
  type: InteractionType
}

input UpdateJobInput {
  customerId: String
  description: String
  dueDate: DateTime
  id: ID!
  priority: Priority
  startDate: DateTime
  status: JobStatus
  title: String
}

type User {
  createdAt: DateTime!
  email: String!
  id: ID!
  name: String!
  role: Role!
  updatedAt: DateTime!
}